@model List<InscripcionMaterias.Models.PensumMateria>

@{
    ViewData["Title"] = "Configurar Materias";
    var materiasDisponibles = ViewBag.MateriasDisponibles as List<InscripcionMaterias.Models.Materium>;
    int idPensum = (int)ViewBag.IdPensum;
    string nombreCarrera = ViewBag.NombreCarrera ?? "Carrera";
}

<div class="container mt-4">
    <h2 class="mb-4">Configurar materias para la carrera: <span class="text-primary">@nombreCarrera</span></h2>

    <form id="formAgregarMateria" class="row g-3" asp-action="Create">
        <input type="" name="IdPensum" value="@idPensum" />

        <div class="col-md-6">
            <label for="materiaSelect" class="form-label">Materia:</label>
            <select class="form-select" id="materiaSelect" name="IdMateria" required>
                <option value="">--Seleccione--</option>
                @foreach (var mat in materiasDisponibles)
                {
                    <option value="@mat.Id">@mat.Nombre</option>
                }
            </select>
        </div>

        <div class="col-md-6">
            <label for="prerequisitoSelect" class="form-label">Materia Prerequisito:</label>
            <select class="form-select" id="prerequisitoSelect" name="IdMateriaPrerequisito">
                <option value="">--Ninguno--</option>
                @foreach (var mat in materiasDisponibles)
                {
                    <option value="@mat.Id">@mat.Nombre</option>
                }
            </select>
        </div>

        <div class="col-md-3">
            <label for="cicloSelect" class="form-label">Ciclo:</label>
            <select class="form-select" id="cicloSelect" name="CicloCurricular" required>
                <option value="1">1</option>
                <option value="2">2</option>
            </select>
        </div>

        <div class="col-md-12">
            <button type="submit" class="btn btn-success">
                <i class="bi bi-plus-circle"></i> Agregar Materia
            </button>
        </div>
    </form>

    <div id="mensaje" class="mt-3"></div>

    <hr class="my-4" />

    <div id="materiasAsignadas">
        @await Html.PartialAsync("_MateriasAsignadasPartial", Model)
    </div>



</div>

@section Scripts {
    <script>


        document.getElementById("formAgregarMateria").addEventListener("submit", function (e) {
            e.preventDefault();

            const form = e.target;
            const formData = new FormData(form);

            fetch('@Url.Action("Create", "PensumMaterias")', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (!response.ok) throw new Error("Error en la respuesta del servidor.");
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    document.getElementById("mensaje").innerHTML =
                        `<div class="alert alert-success">${data.message}</div>`;

                    form.reset();

                    // Recargar la lista de materias asignadas con la acción que devuelve el partial
                    fetch('@Url.Action("ListarMateriasAsignadas", "PensumMaterias")?idPensum=' + encodeURIComponent(@idPensum))
                        .then(resp => {
                            if (!resp.ok) throw new Error("Error al cargar materias asignadas.");
                            return resp.text();
                        })
                        .then(html => {
                            document.getElementById("materiasAsignadas").innerHTML = html;

                            // Re-attach event listeners to new delete buttons, si tienes esa funcionalidad
                            attachDeleteHandlers();
                        });
                } else {
                    // Mostrar errores
                    let erroresHtml = '<ul>';
                    data.detalles.forEach(det => {
                        det.errores.forEach(error => {
                            erroresHtml += `<li><strong>${det.campo}</strong>: ${error}</li>`;
                        });
                    });
                    erroresHtml += '</ul>';

                    document.getElementById("mensaje").innerHTML =
                        `<div class="alert alert-danger"><strong>${data.message}</strong>${erroresHtml}</div>`;
                }
            })
            .catch(error => {
                document.getElementById("mensaje").innerHTML =
                    `<div class="alert alert-danger">Ocurrió un error: ${error.message}</div>`;
            });
        });

    </script>
}
