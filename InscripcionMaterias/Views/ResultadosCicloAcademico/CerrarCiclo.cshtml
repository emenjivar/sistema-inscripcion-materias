@model InscripcionMaterias.Models.ViewModels.FiltroCierreCicloViewModel

@{
    ViewData["Title"] = "Cerrar Ciclo";
}

<h2>Cierre de Ciclo Académico</h2>

<form asp-action="CerrarCiclo" method="post">
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="form-group col-4">
            <label>Pensum</label>
            @Html.DropDownListFor(m => m.IdPensum, Model.Pensums, "Seleccione un pensum", new { @class = "form-control" })
        </div>
        <div class="form-group col-4">
            <label>Ciclo Académico</label>
            @Html.DropDownListFor(m => m.CicloAcademico, Model.Ciclos, "Seleccione un ciclo", new { @class = "form-control" })
        </div>
        <div class="form-group col-4">
            <label>Año</label>
            @Html.DropDownListFor(m => m.Anio, Model.Anios, "Seleccione un año", new { @class = "form-control" })
        </div>
    </div>
    <button type="submit" class="btn btn-primary mt-3">Buscar</button>
</form>

@if (Model.Resultados != null && Model.Resultados.Any())
{
    <hr />
    <h3>Resultados</h3>
    <table class="table table-bordered table-striped mt-3">
        <thead>
            <tr>
                <th>Alumno</th>
                <th>Materias</th>
                <th>Aprobación</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var alumno in Model.Resultados)
            {
                <tr>
                    <td>@alumno.NombreAlumno</td>
                    <td>
                        <ul>
                            @foreach (var materia in alumno.Materias)
                            {
                                <li>@materia.NombreMateria</li>
                            }
                        </ul>
                    </td>
                    <td>
                        @foreach (var materia in alumno.Materias)
                        {
                            <div class="form-check">
                                <input type="checkbox"
                                       class="form-check-input"
                                       name="Aprobadas[@alumno.IdAlumno][@materia.IdMateria]"
                                       id="check_@($"{alumno.IdAlumno}_{materia.IdMateria}")"
                                @(materia.Aprobado ? "checked disabled" : "") />

                                <label class="form-check-label text-@(materia.Aprobado ? "success" : "dark")" for="check_@($"{alumno.IdAlumno}_{materia.IdMateria}")">
                                    @(materia.Aprobado ? "Aprobada (guardada)" : "Aprobada")
                                </label>
                            </div>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@if (Model.Resultados != null && Model.Resultados.Any())
{
    <button id="btnGuardarResultados" class="btn btn-success mt-3">Guardar Resultados</button>
}

@section Scripts {
    <script>
        document.getElementById("btnGuardarResultados").addEventListener("click", function () {
            const resultados = [];

        @foreach (var alumno in Model.Resultados)
        {
            <text>
                        let materiasAprobadas = [];
            </text>

            @foreach (var materia in alumno.Materias)
            {
                <text>
                    let checkbox = document.getElementById("check_@($"{alumno.IdAlumno}_{materia.IdMateria}")");
                    if (checkbox.checked && !checkbox.disabled) {
                        materiasAprobadas.push(@materia.IdMateria);
                    }
                </text>
            }

            <text>
                        resultados.push({
                            idAlumno: @alumno.IdAlumno,
                            materiasAprobadas: materiasAprobadas
                        });
            </text>
        }

            const data = {
                idPensum: @Model.IdPensum,
                ciclo: @Model.CicloAcademico,
                anio: @Model.Anio,
                resultados: resultados
            };

            fetch('@Url.Action("GuardarResultados", "ResultadosCicloAcademico")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify(data)
            })
            .then(res => {
                if (!res.ok) throw new Error("Error al guardar.");
                return res.json();
            })
            .then(result => {
                alert(result.mensaje);
            })
            .catch(err => {
                console.error(err);
                alert("Ocurrió un error al guardar los resultados.");
            });
        });
    </script>
}

